/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "sigs.k8s.io/noderesourcetopology-api/pkg/apis/topology/v1alpha1"
)

// ZoneApplyConfiguration represents an declarative configuration of the Zone type for use
// with apply.
type ZoneApplyConfiguration struct {
	Name       *string                    `json:"name,omitempty"`
	Type       *string                    `json:"type,omitempty"`
	Parent     *string                    `json:"parent,omitempty"`
	Costs      *v1alpha1.CostList         `json:"costs,omitempty"`
	Attributes *v1alpha1.AttributeList    `json:"attributes,omitempty"`
	Resources  *v1alpha1.ResourceInfoList `json:"resources,omitempty"`
}

// ZoneApplyConfiguration constructs an declarative configuration of the Zone type for use with
// apply.
func Zone() *ZoneApplyConfiguration {
	return &ZoneApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ZoneApplyConfiguration) WithName(value string) *ZoneApplyConfiguration {
	b.Name = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ZoneApplyConfiguration) WithType(value string) *ZoneApplyConfiguration {
	b.Type = &value
	return b
}

// WithParent sets the Parent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Parent field is set to the value of the last call.
func (b *ZoneApplyConfiguration) WithParent(value string) *ZoneApplyConfiguration {
	b.Parent = &value
	return b
}

// WithCosts sets the Costs field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Costs field is set to the value of the last call.
func (b *ZoneApplyConfiguration) WithCosts(value v1alpha1.CostList) *ZoneApplyConfiguration {
	b.Costs = &value
	return b
}

// WithAttributes sets the Attributes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Attributes field is set to the value of the last call.
func (b *ZoneApplyConfiguration) WithAttributes(value v1alpha1.AttributeList) *ZoneApplyConfiguration {
	b.Attributes = &value
	return b
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *ZoneApplyConfiguration) WithResources(value v1alpha1.ResourceInfoList) *ZoneApplyConfiguration {
	b.Resources = &value
	return b
}
